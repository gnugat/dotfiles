# File: /3f-tmux/config/tmux.conf
# ──────────────────────────────────────────────────────────────────────────────
# tmux
#
# * `set-option` (`set`): applies setting at the session level
# * `set-window-option` (`setw`): applies settings at window level
# * `bind-key` (`bind`)
# * `unbind-key` (`unbind`)
# ──────────────────────────────────────────────────────────────────────────────

## ─────────────────────────────────────────────────────────────────────────────
## General
## ─────────────────────────────────────────────────────────────────────────────

## Binds `Ctrl`+`Space` to "prefix" aka "Leader" (instead of `Ctrl`+`b`)
unbind-key C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

## Binds `r` to reload config (`tmux source-file ~/.config/tmux/tmux.conf`).
unbind-key r
bind-key r source-file ~/.config/tmux/tmux.conf

## Enables mouse support (eg resizing, selecting, scrolling, etc)
set-option -g mouse on

## Sets index for windows and panes to start from 1 (instead of 0)
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

## Sets new windows/panes in the current's pane CWD (instead of $HOME)
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

## ─────────────────────────────────────────────────────────────────────────────
## Vim-like behaviour
## ─────────────────────────────────────────────────────────────────────────────

## Enables "vi keybindings" for "copy mode"
## (instead of emacs keybindings)
set-window-option -g mode-keys vi

## Enables "vi visual mode" text selection for "copy mode"
## (instead of `Space` and `Enter`)
bind-key -T copy-mode-vi v send-keys -X begin-selection
## Block selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
## Yank and exit "copy mode"
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

## Binds `Shift`+`h/l` to window navigation (instead of `n` and `p`)
bind-key H previous-window
bind-key L next-window

## Binds `Alt`+`h/j/k/l` to pane navigation, **without prefix**
## (instead of emacs arrow keys)
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

## Binds `s` and `v` to split window
## (instead of `%` and `"`)
## Split horizontal (left / right)
bind-key s split-window -h -c "#{pane_current_path}"
## Split Vertical (top / bottom)
bind-key v split-window -v -c "#{pane_current_path}"

## ─────────────────────────────────────────────────────────────────────────────
## Clipboard integration
## ─────────────────────────────────────────────────────────────────────────────

## Enables clipboard integration between tmux and vim
set-option -g set-clipboard on

### ────────────────────────────────────────────────────────────────────────────
### Enables clipboard integration between tmux and the system
### Notes:
###  * do NOT try enabling copying via `Ctrl + c`: this is reserved for killing processes
###  * Cross Platform compatibility: if Darwin then Mac OS, else Linux
### ────────────────────────────────────────────────────────────────────────────

### Using copying in Copy Mode via vim like `y` yanking
if-shell 'uname -s | grep -iq darwin' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard"'

### Using copying in Normal Mode via mouse left button selection
if-shell 'uname -s | grep -iq darwin' \
  'bind-key -T root MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"' \
  'bind-key -T root MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"'

### Using pasting in Normal Mode via `Ctrl` + `v`
if-shell 'uname -s | grep -iq darwin' \
  'bind-key -n C-v run "tmux set-buffer $(pbpaste) && tmux paste-buffer"' \
  'bind-key -n C-v run "tmux set-buffer $(xclip -selection clipboard -o) && tmux paste-buffer"'

## ─────────────────────────────────────────────────────────────────────────────
## Style: uses catppuccin/tmux plugin (must not be installed via TPM).
##
## Needs to be run before TPM (plugins might change things in the status line).
## ─────────────────────────────────────────────────────────────────────────────

source-file "~/.config/tmux/status-bar.conf"

## ─────────────────────────────────────────────────────────────────────────────
## TPM: TMUX Plugin Manager
##
## To install a new plugin:
## * add a line in List of plugins
## * either:
##  * press `<prefix>` + `Shift` + `i`
##  * run `~/.config/tmux/plugins/tpm/bin/install_plugins`
##
## Plugins used:
## * tmux-sensible: sensible settings, do not override user defined settings.
## * tmux-sessionist: better session creation, deletion and switching.
## * catppuccin/tmux: the purr-fectly caffeinated theme, for the status line.
## ─────────────────────────────────────────────────────────────────────────────

setenv -g TMUX_PLUGIN_MANAGER_PATH "~/.config/tmux/plugins/"

## List of plugins (yes, TPM is a plugin)
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-sessionist'

### ────────────────────────────────────────────────────────────────────────────
### Initialize TPM (MUST be the last line of `tmux.conf`)
### ────────────────────────────────────────────────────────────────────────────

run '~/.config/tmux/plugins/tpm/tpm'
